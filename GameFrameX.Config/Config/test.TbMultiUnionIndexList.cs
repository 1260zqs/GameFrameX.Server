
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Text.Json;
using GameFrameX.Config.Core;

namespace GameFrameX.Config.test
{
    public partial class TbMultiUnionIndexList : BaseDataTable<test.MultiUnionIndexList>
    {
        //private readonly System.Collections.Generic.List<test.MultiUnionIndexList> _dataList;
        private System.Collections.Generic.Dictionary<(int, long, string), test.MultiUnionIndexList> _dataMapUnion;
    
        //public System.Collections.Generic.List<test.MultiUnionIndexList> DataList => _dataList;
        public test.MultiUnionIndexList Get(int id1, long id2, string id3) => _dataMapUnion.TryGetValue((id1, id2, id3), out test.MultiUnionIndexList __v) ? __v : null;
    

        public override async System.Threading.Tasks.Task LoadAsync()
        {
            var jsonElement = await _loadFunc();
            DataList.Clear();
            LongDataMaps.Clear();
            StringDataMaps.Clear();
            foreach(var element in jsonElement.EnumerateArray())
            {
                test.MultiUnionIndexList _v;
                _v = test.MultiUnionIndexList.DeserializeMultiUnionIndexList(element);
                DataList.Add(_v);
            }
            _dataMapUnion = new System.Collections.Generic.Dictionary<(int, long, string), test.MultiUnionIndexList>();
            _dataMapUnion.Clear();
            foreach(var element in DataList)
            {
                _dataMapUnion.Add((element.Id1, element.Id2, element.Id3), element);
            }
            PostInit();
        }

        public void ResolveRef(TablesComponent tables)
        {
            foreach(var element in DataList)
            {
                element.ResolveRef(tables);
            }
        }
    
        partial void PostInit();

        public TbMultiUnionIndexList(Func<Task<JsonElement>> loadFunc) : base(loadFunc)
        {
        }
    }
}
