
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Text.Json;
using GameFrameX.Core.Config;

namespace GameFrameX.Config
{
    public sealed partial class DefineFromExcel2 : BeanBase
    {
        /*
        public DefineFromExcel2(int Id, bool X1, long X5, float X6, int X8, string X10, test.DemoEnum X13, test.DemoFlag X132, test.DemoDynamic X14, test.Shape X15, System.Numerics.Vector2 V2, long T1, int[] K1, int[] K2, System.Collections.Generic.Dictionary<int, int> K8, System.Collections.Generic.List<test.DemoE2> K9, System.Collections.Generic.List<System.Numerics.Vector3> K10, System.Collections.Generic.List<System.Numerics.Vector4> K11, System.Numerics.Vector3? V11) 
        {
            this.Id = Id;
            this.X1 = X1;
            this.X5 = X5;
            this.X6 = X6;
            this.X8 = X8;
            this.X10 = X10;
            this.X13 = X13;
            this.X132 = X132;
            this.X14 = X14;
            this.X15 = X15;
            this.V2 = V2;
            this.T1 = T1;
            this.K1 = K1;
            this.K2 = K2;
            this.K8 = K8;
            this.K9 = K9;
            this.K10 = K10;
            this.K11 = K11;
            this.V11 = V11;
            PostInit();
        }        
        */

        public DefineFromExcel2(JsonElement _buf) 
        {
            Id = _buf.GetProperty("id").GetInt32();
            X1 = _buf.GetProperty("x1").GetBoolean();
            X5 = _buf.GetProperty("x5").GetInt64();
            X6 = _buf.GetProperty("x6").GetSingle();
            X8 = _buf.GetProperty("x8").GetInt32();
            X10 = _buf.GetProperty("x10").GetString();
            X13 = (test.DemoEnum)_buf.GetProperty("x13").GetInt32();
            X132 = (test.DemoFlag)_buf.GetProperty("x13_2").GetInt32();
            X14 = test.DemoDynamic.DeserializeDemoDynamic(_buf.GetProperty("x14"));
            X15 = test.Shape.DeserializeShape(_buf.GetProperty("x15"));
            V2 = ExternalTypeUtil.NewVector2(vec2.Deserializevec2(_buf.GetProperty("v2")));
            T1 = _buf.GetProperty("t1").GetInt64();
            { var __json0 = _buf.GetProperty("k1"); int _n0 = __json0.GetArrayLength(); K1 = new int[_n0]; int __index0=0; foreach(JsonElement __e0 in __json0.EnumerateArray()) { int __v0;  __v0 = __e0.GetInt32();  K1[__index0++] = __v0; }   }
            { var __json0 = _buf.GetProperty("k2"); int _n0 = __json0.GetArrayLength(); K2 = new int[_n0]; int __index0=0; foreach(JsonElement __e0 in __json0.EnumerateArray()) { int __v0;  __v0 = __e0.GetInt32();  K2[__index0++] = __v0; }   }
            { var __json0 = _buf.GetProperty("k8"); K8 = new System.Collections.Generic.Dictionary<int, int>(__json0.GetArrayLength()); foreach(JsonElement __e0 in __json0.EnumerateArray()) { int _k0;  _k0 = __e0[0].GetInt32(); int _v0;  _v0 = __e0[1].GetInt32();  K8.Add(_k0, _v0); }   }
            { var __json0 = _buf.GetProperty("k9"); K9 = new System.Collections.Generic.List<test.DemoE2>(__json0.GetArrayLength()); foreach(JsonElement __e0 in __json0.EnumerateArray()) { test.DemoE2 __v0;  __v0 = test.DemoE2.DeserializeDemoE2(__e0);  K9.Add(__v0); }   }
            { var __json0 = _buf.GetProperty("k10"); K10 = new System.Collections.Generic.List<System.Numerics.Vector3>(__json0.GetArrayLength()); foreach(JsonElement __e0 in __json0.EnumerateArray()) { System.Numerics.Vector3 __v0;  __v0 = ExternalTypeUtil.NewVector3(vec3.Deserializevec3(__e0));  K10.Add(__v0); }   }
            { var __json0 = _buf.GetProperty("k11"); K11 = new System.Collections.Generic.List<System.Numerics.Vector4>(__json0.GetArrayLength()); foreach(JsonElement __e0 in __json0.EnumerateArray()) { System.Numerics.Vector4 __v0;  __v0 = ExternalTypeUtil.NewVector4(vec4.Deserializevec4(__e0));  K11.Add(__v0); }   }
            {if (_buf.TryGetProperty("v11", out var _j) && _j.ValueKind != JsonValueKind.Null) { V11 = ExternalTypeUtil.NewVector3(vec3.Deserializevec3(_j)); } else { V11 = null; } }
        }
    
        public static DefineFromExcel2 DeserializeDefineFromExcel2(JsonElement _buf)
        {
            return new DefineFromExcel2(_buf);
        }

        /// <summary>
        /// 这是id
        /// </summary>
        public int Id { private set; get; }
        /// <summary>
        /// 字段x1
        /// </summary>
        public bool X1 { private set; get; }
        public long X5 { private set; get; }
        public float X6 { private set; get; }
        public int X8 { private set; get; }
        public string X10 { private set; get; }
        public test.DemoEnum X13 { private set; get; }
        public test.DemoFlag X132 { private set; get; }
        public test.DemoDynamic X14 { private set; get; }
        public test.Shape X15 { private set; get; }
        public System.Numerics.Vector2 V2 { private set; get; }
        public long T1 { private set; get; }
        public int[] K1 { private set; get; }
        public int[] K2 { private set; get; }
        public System.Collections.Generic.Dictionary<int, int> K8 { private set; get; }
        public System.Collections.Generic.List<test.DemoE2> K9 { private set; get; }
        public System.Collections.Generic.List<System.Numerics.Vector3> K10 { private set; get; }
        public System.Collections.Generic.List<System.Numerics.Vector4> K11 { private set; get; }
        public System.Numerics.Vector3? V11 { private set; get; }

        private const int __ID__ = 482045152;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef(TablesComponent tables)
        {
            
            
            
            
            
            
            
            
            X14?.ResolveRef(tables);
            X15?.ResolveRef(tables);
            
            
            
            
            
            
            
            
            
        }

        public override string ToString()
        {
            return "{ "
            + "id:" + Id + ","
            + "x1:" + X1 + ","
            + "x5:" + X5 + ","
            + "x6:" + X6 + ","
            + "x8:" + X8 + ","
            + "x10:" + X10 + ","
            + "x13:" + X13 + ","
            + "x132:" + X132 + ","
            + "x14:" + X14 + ","
            + "x15:" + X15 + ","
            + "v2:" + V2 + ","
            + "t1:" + T1 + ","
            + "k1:" + StringUtil.CollectionToString(K1) + ","
            + "k2:" + StringUtil.CollectionToString(K2) + ","
            + "k8:" + StringUtil.CollectionToString(K8) + ","
            + "k9:" + StringUtil.CollectionToString(K9) + ","
            + "k10:" + StringUtil.CollectionToString(K10) + ","
            + "k11:" + StringUtil.CollectionToString(K11) + ","
            + "v11:" + V11 + ","
            + "}";
        }

        partial void PostInit();
    }
}
