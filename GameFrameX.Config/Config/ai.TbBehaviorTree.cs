
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Text.Json;
using GameFrameX.Core.Config;

namespace GameFrameX.Config.ai
{
    public partial class TbBehaviorTree : BaseDataTable<ai.BehaviorTree>
    {
        //private readonly System.Collections.Generic.Dictionary<int, ai.BehaviorTree> _dataMap;
        //private readonly System.Collections.Generic.List<ai.BehaviorTree> _dataList;
    
        //public System.Collections.Generic.Dictionary<int, ai.BehaviorTree> DataMap => _dataMap;
        //public System.Collections.Generic.List<ai.BehaviorTree> DataList => _dataList;
        //public ai.BehaviorTree GetOrDefault(int key) => _dataMap.TryGetValue(key, out var v) ? v : null;
        //public ai.BehaviorTree Get(int key) => _dataMap[key];
        //public ai.BehaviorTree this[int key] => _dataMap[key];
    
        public override async System.Threading.Tasks.Task LoadAsync()
        {
            var jsonElement = await _loadFunc();
            DataList.Clear();
            LongDataMaps.Clear();
            StringDataMaps.Clear();
            foreach(var element in jsonElement.EnumerateArray())
            {
                ai.BehaviorTree _v;
                _v = ai.BehaviorTree.DeserializeBehaviorTree(element);
                DataList.Add(_v);
                LongDataMaps.Add(_v.Id, _v);
                StringDataMaps.Add(_v.Id.ToString(), _v);
            }
            PostInit();
        }

        public void ResolveRef(TablesComponent tables)
        {
            foreach(var element in DataList)
            {
                element.ResolveRef(tables);
            }
        }
    
    
        partial void PostInit();

        public TbBehaviorTree(Func<Task<JsonElement>> loadFunc) : base(loadFunc)
        {
        }
    }
}
